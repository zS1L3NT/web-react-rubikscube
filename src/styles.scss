* {
	margin: 0;
	padding: 0;
}

html,
body,
#root,
.drag-area {
	width: 100%;
	height: 100%;
}

.drag-area {
	display: flex;
	justify-content: center;
	align-items: center;
	cursor: grab;

	&.dragging {
		cursor: grabbing;
	}
}

.cube-wrapper {
	perspective: 2000;
	-webkit-perspective: 2000;

	.cube {
		position: relative;
		width: 300px;
		height: 300px;
		transform-style: preserve-3d;
		-webkit-transform-style: preserve-3d;

		.rotation-wrapper {
			width: 300px;
			height: 300px;
			position: relative;
			transform-style: preserve-3d;
			-webkit-transform-style: preserve-3d;
		}

		.square {
			position: absolute;
			width: 100px;
			height: 100px;

			& > div {
				border: 5px solid black;
				width: 90px;
				height: 90px;
				border-radius: 10px;
			}

			$colors: (
				"white": (
					rotateX(90deg) rotateY(0),
					(0px, 100px, 200px),
					(-100px, 0px, 100px),
					50px
				),
				"red": (
					rotateX(0deg) rotateY(0),
					(0px, 100px, 200px),
					(0px, 100px, 200px),
					150px
				),
				"yellow": (
					rotateX(-90deg) rotateY(0),
					(0px, 100px, 200px),
					(-100px, 0px, 100px),
					250px
				),
				"orange": (
					rotateX(-180deg) rotateY(0),
					(0px, 100px, 200px),
					(-200px, -100px, 0px),
					150px
				),
				"green": (
					rotateX(0deg) rotateY(-90deg),
					(-100px, 0px, 100px),
					(0px, 100px, 200px),
					50px
				),
				"blue": (
					rotateX(0deg) rotateY(90deg),
					(-100px, 0px, 100px),
					(0px, 100px, 200px),
					250px
				)
			);

			@each $color, $data in $colors {
				@each $y in nth($data, 3) {
					@each $x in nth($data, 2) {
						&.#{$color}-#{index(nth($data, 3), $y) * 3 + index(nth($data, 2), $x) - 4} {
							transform: nth($data, 1) translate3d($x, $y, nth($data, 4));
						}
					}
				}
			}
		}
	}
}
