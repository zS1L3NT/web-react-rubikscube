* {
	margin: 0;
	padding: 0;
}

html,
body,
#root,
.drag-area {
	width: 100%;
	height: 100%;
}

.drag-area {
	display: flex;
	justify-content: center;
	align-items: center;
	cursor: grab;

	&.dragging {
		cursor: grabbing;
	}
}

.cube-wrapper {
	perspective: 2000;
	-webkit-perspective: 2000;

	.cube {
		position: relative;
		width: 300px;
		height: 300px;
		transform-style: preserve-3d;
		-webkit-transform-style: preserve-3d;

		.rotation-wrapper {
			width: 300px;
			height: 300px;
			position: relative;
			transform-style: preserve-3d;
			-webkit-transform-style: preserve-3d;
		}

		.square {
			position: absolute;
			width: 100px;
			height: 100px;

			& > div {
				border: 5px solid black;
				width: 90px;
				height: 90px;
				border-radius: 10px;
			}

			$cubes: (
				"front": (
					rotateX(0deg) rotateY(0),
					(0px, 100px, 200px),
					(0px, 100px, 200px),
					150px
				),
				"back": (
					rotateX(-180deg) rotateY(0),
					(0px, 100px, 200px),
					(-200px, -100px, 0px),
					150px
				),
				"left": (
					rotateX(0deg) rotateY(-90deg),
					(-100px, 0px, 100px),
					(0px, 100px, 200px),
					50px
				),
				"right": (
					rotateX(0deg) rotateY(90deg),
					(-100px, 0px, 100px),
					(0px, 100px, 200px),
					250px
				),
				"top": (
					rotateX(90deg) rotateY(0),
					(0px, 100px, 200px),
					(-100px, 0px, 100px),
					50px
				),
				"bottom": (
					rotateX(-90deg) rotateY(0),
					(0px, 100px, 200px),
					(-100px, 0px, 100px),
					250px
				)
			);

			@each $direction, $cube in $cubes {
				@each $y in nth($cube, 3) {
					@each $x in nth($cube, 2) {
						&.#{$direction}-#{index(nth($cube, 3), $y) * 3 + index(nth($cube, 2), $x) - 4} {
							transform: nth($cube, 1) translate3d($x, $y, nth($cube, 4));
						}
					}
				}
			}
		}

		.surface {
			position: absolute;
			width: 300px;
			height: 300px;
			background-color: black;

			$surfaces: (
				(rotateX(0deg) rotateY(90deg) translate3d(0, 0, -149px)),
				(rotateX(0deg) rotateY(90deg) translate3d(0, 0, -50px)),
				(rotateX(0deg) rotateY(90deg) translate3d(0, 0, 50px)),
				(rotateX(0deg) rotateY(90deg) translate3d(0, 0, 149px)),
				(rotateX(0deg) rotateY(180deg) translate3d(0, 0, -149px)),
				(rotateX(0deg) rotateY(180deg) translate3d(0, 0, -50px)),
				(rotateX(0deg) rotateY(180deg) translate3d(0, 0, 50px)),
				(rotateX(0deg) rotateY(180deg) translate3d(0, 0, 149px)),
				(rotateX(90deg) rotateY(0deg) translate3d(0, 0, -149px)),
				(rotateX(90deg) rotateY(0deg) translate3d(0, 0, -50px)),
				(rotateX(90deg) rotateY(0deg) translate3d(0, 0, 50px)),
				(rotateX(90deg) rotateY(0deg) translate3d(0, 0, 149px))
			);

			@each $surface in $surfaces {
				&.surface-#{index($surfaces, $surface)} {
					transform: $surface;
				}
			}
		}
	}
}
